{"ast":null,"code":"import { SAVE_TODO, DELETE_TODO, IS_DONE, TOGGLE_EDIT } from \"../common/types\";\nexport const saveTodo = task => dispatch => {\n  try {\n    dispatch({\n      type: SAVE_TODO,\n      payload: {\n        task\n      }\n    });\n  } catch (err) {\n    console.log(`err`, err);\n  }\n};\nexport const deleteTodo = id => dispatch => {\n  try {\n    dispatch({\n      type: DELETE_TODO,\n      payload: {\n        id\n      }\n    });\n  } catch (err) {\n    console.log(`err`, err);\n  }\n};\nexport const isDone = (id, checked) => dispatch => {\n  try {\n    dispatch({\n      type: IS_DONE,\n      payload: {\n        id,\n        checked\n      }\n    });\n  } catch (err) {\n    console.log(`err`, err);\n  }\n};\nexport const toggleEdit = (id, isEdit) => dispatch => {\n  try {\n    dispatch({\n      type: TOGGLE_EDIT,\n      payload: {\n        id,\n        isEdit\n      }\n    });\n  } catch (err) {\n    console.log(`err`, err);\n  }\n};\nexport const changeTodo = (id, task) => dispatch => {\n  try {\n    dispatch({\n      type: TOGGLE_EDIT,\n      payload: {\n        id,\n        task\n      }\n    });\n  } catch (err) {\n    console.log(`err`, err);\n  }\n};","map":{"version":3,"sources":["/Users/stasiu/Programowanie/todo-ts-redux/src/actions/todo.ts"],"names":["SAVE_TODO","DELETE_TODO","IS_DONE","TOGGLE_EDIT","saveTodo","task","dispatch","type","payload","err","console","log","deleteTodo","id","isDone","checked","toggleEdit","isEdit","changeTodo"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,OAAjC,EAA0CC,WAA1C,QAA6D,iBAA7D;AAEA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAmBC,QAAD,IAAmB;AAC3D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,SADC;AAEPQ,MAAAA,OAAO,EAAE;AAAEH,QAAAA;AAAF;AAFF,KAAD,CAAR;AAID,GALD,CAKE,OAAOI,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAa,KAAb,EAAmBF,GAAnB;AACD;AACF,CATM;AAWP,OAAO,MAAMG,UAAU,GAAIC,EAAD,IAAiBP,QAAD,IAAmB;AAC3D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,WADC;AAEPO,MAAAA,OAAO,EAAE;AAAEK,QAAAA;AAAF;AAFF,KAAD,CAAR;AAID,GALD,CAKE,OAAOJ,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAa,KAAb,EAAmBF,GAAnB;AACD;AACF,CATM;AAWP,OAAO,MAAMK,MAAM,GAAG,CAACD,EAAD,EAAaE,OAAb,KAAmCT,QAAD,IAAmB;AACzE,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,OADC;AAEPM,MAAAA,OAAO,EAAE;AAAEK,QAAAA,EAAF;AAAME,QAAAA;AAAN;AAFF,KAAD,CAAR;AAID,GALD,CAKE,OAAON,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAa,KAAb,EAAmBF,GAAnB;AACD;AACF,CATM;AAWP,OAAO,MAAMO,UAAU,GAAG,CAACH,EAAD,EAAaI,MAAb,KAAkCX,QAAD,IAAmB;AAC5E,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,WADC;AAEPK,MAAAA,OAAO,EAAE;AAAEK,QAAAA,EAAF;AAAMI,QAAAA;AAAN;AAFF,KAAD,CAAR;AAID,GALD,CAKE,OAAOR,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAa,KAAb,EAAmBF,GAAnB;AACD;AACF,CATM;AAWP,OAAO,MAAMS,UAAU,GAAG,CAACL,EAAD,EAAaR,IAAb,KAA+BC,QAAD,IAAmB;AACzE,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,WADC;AAEPK,MAAAA,OAAO,EAAE;AAAEK,QAAAA,EAAF;AAAMR,QAAAA;AAAN;AAFF,KAAD,CAAR;AAID,GALD,CAKE,OAAOI,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAa,KAAb,EAAmBF,GAAnB;AACD;AACF,CATM","sourcesContent":["import { SAVE_TODO, DELETE_TODO, IS_DONE, TOGGLE_EDIT } from \"../common/types\";\n\nexport const saveTodo = (task: string) => (dispatch: any) => {\n  try {\n    dispatch({\n      type: SAVE_TODO,\n      payload: { task },\n    });\n  } catch (err) {\n    console.log(`err`, err);\n  }\n};\n\nexport const deleteTodo = (id: number) => (dispatch: any) => {\n  try {\n    dispatch({\n      type: DELETE_TODO,\n      payload: { id },\n    });\n  } catch (err) {\n    console.log(`err`, err);\n  }\n};\n\nexport const isDone = (id: number, checked: boolean) => (dispatch: any) => {\n  try {\n    dispatch({\n      type: IS_DONE,\n      payload: { id, checked },\n    });\n  } catch (err) {\n    console.log(`err`, err);\n  }\n};\n\nexport const toggleEdit = (id: number, isEdit: boolean) => (dispatch: any) => {\n  try {\n    dispatch({\n      type: TOGGLE_EDIT,\n      payload: { id, isEdit },\n    });\n  } catch (err) {\n    console.log(`err`, err);\n  }\n};\n\nexport const changeTodo = (id: number, task: string) => (dispatch: any) => {\n  try {\n    dispatch({\n      type: TOGGLE_EDIT,\n      payload: { id, task },\n    });\n  } catch (err) {\n    console.log(`err`, err);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}