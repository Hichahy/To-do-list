{"ast":null,"code":"var _jsxFileName = \"/Users/stasiu/Programowanie/todo-ts-redux/src/components/List.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./List.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = ({\n  todoList,\n  saveTodo,\n  deleteTodo,\n  isDone,\n  toggleEdit,\n  changeTodo\n}) => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n\n  const addTodo = () => {\n    console.log(`adding ${text}`);\n    saveTodo(text);\n    setText(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: true,\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        onClick: addTodo,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-container\",\n      children: todoList.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.isEdit ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.task,\n            onChange: e => changeTodo(item.id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this) : item.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => toggleEdit(item.id, item.isEdit),\n          children: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => deleteTodo(item.id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: e => isDone(item.id, e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/stasiu/Programowanie/todo-ts-redux/src/components/List.tsx"],"names":["React","useState","List","todoList","saveTodo","deleteTodo","isDone","toggleEdit","changeTodo","text","setText","addTodo","console","log","e","target","value","length","map","item","isEdit","task","id","checked"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;;;AAgBA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA,QADY;AAEZC,EAAAA,QAFY;AAGZC,EAAAA,UAHY;AAIZC,EAAAA,MAJY;AAKZC,EAAAA,UALY;AAMZC,EAAAA;AANY,CAAD,KAOC;AAAA;;AACZ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMU,OAAO,GAAG,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAa,UAASJ,IAAK,EAA3B;AACAL,IAAAA,QAAQ,CAACK,IAAD,CAAR;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AACA,QAAA,SAAS,MADT;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAED,IAHT;AAIE,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,QAAQ,EAAEP,IAAI,CAACQ,MAAL,KAAgB,CAAlC;AAAqC,QAAA,OAAO,EAAEN,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGR,QAAQ,CAACe,GAAT,CAAcC,IAAD,iBACZ;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA,oBACGA,IAAI,CAACC,MAAL,gBACC;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,KAAK,EAAED,IAAI,CAACE,IAFd;AAGE,YAAA,QAAQ,EAAGP,CAAD,IAAON,UAAU,CAACW,IAAI,CAACG,EAAN,EAAUR,CAAC,CAACC,MAAF,CAASC,KAAnB;AAH7B;AAAA;AAAA;AAAA;AAAA,kBADD,GAOCG,IAAI,CAACE;AART;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE;AAAK,UAAA,OAAO,EAAE,MAAMd,UAAU,CAACY,IAAI,CAACG,EAAN,EAAUH,IAAI,CAACC,MAAf,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eAaE;AAAK,UAAA,OAAO,EAAE,MAAMf,UAAU,CAACc,IAAI,CAACG,EAAN,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAcE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,QAAQ,EAAGR,CAAD,IAAOR,MAAM,CAACa,IAAI,CAACG,EAAN,EAAUR,CAAC,CAACC,MAAF,CAASQ,OAAnB;AAFzB;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA,SAAgCJ,IAAI,CAACG,EAArC;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CAvDD;;GAAMpB,I;;KAAAA,I;AAyDN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./List.scss\";\n\ninterface IProps {\n  todoList: Array<{\n    id: number;\n    task: string;\n    checked: boolean;\n    isEdit: boolean;\n  }>;\n  saveTodo: (task: string) => void;\n  deleteTodo: (id: number) => void;\n  isDone: (id: number, checked: boolean) => void;\n  toggleEdit: (id: number, isEdit: boolean) => void;\n  changeTodo: (id: number, task: string) => void;\n}\n\nconst List = ({\n  todoList,\n  saveTodo,\n  deleteTodo,\n  isDone,\n  toggleEdit,\n  changeTodo,\n}: IProps) => {\n  const [text, setText] = useState(\"\");\n\n  const addTodo = () => {\n    console.log(`adding ${text}`);\n    saveTodo(text);\n    setText(\"\");\n  };\n\n  return (\n    <div className=\"list-wrapper\">\n      <div className=\"add-section\">\n        <input\n        className\n          type=\"text\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n        <button disabled={text.length === 0} onClick={addTodo}>\n          Add\n        </button>\n      </div>\n\n      <div className=\"task-container\">\n        {todoList.map((item) => (\n          <div className=\"task-item\" key={item.id}>\n            <div>\n              {item.isEdit ? (\n                <input\n                  type=\"text\"\n                  value={item.task}\n                  onChange={(e) => changeTodo(item.id, e.target.value)}\n                />\n              ) : (\n                item.task\n              )}\n            </div>\n            <div onClick={() => toggleEdit(item.id, item.isEdit)}>edit</div>\n            <div onClick={() => deleteTodo(item.id)}>X</div>\n            <input\n              type=\"checkbox\"\n              onChange={(e) => isDone(item.id, e.target.checked)}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}