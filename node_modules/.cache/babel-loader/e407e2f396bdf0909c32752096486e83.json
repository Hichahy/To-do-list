{"ast":null,"code":"var _jsxFileName = \"/Users/stasiu/Programowanie/todo-ts-redux/src/components/List.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./List.scss\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = ({\n  todoList,\n  saveTodo,\n  deleteTodo,\n  isDone,\n  toggleEdit,\n  changeTodo\n}) => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n\n  const addTodo = () => {\n    console.log(`adding ${text}`);\n    saveTodo(text);\n    setText(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tittle-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"rotate\",\n        children: \"To do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"ADD YOUR TASK\",\n          className: \"add-input\",\n          type: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-button\",\n          onClick: addTodo,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi-plus-circle-fill\",\n            style: {\n              width: \"red\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-container\",\n        children: todoList.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"task\",\n            children: item.isEdit ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: item.task,\n              onChange: e => changeTodo(item.id, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this) : item.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => toggleEdit(item.id, item.isEdit),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: !item.isEdit ? \"bi bi-pen\" : \"bi bi-pen-fill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 69\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => isDone(item.id, !item.checked),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: item.checked ? \"bi bi-check-circle-fill\" : \"bi bi-check-circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => deleteTodo(item.id),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-trash2 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/stasiu/Programowanie/todo-ts-redux/src/components/List.tsx"],"names":["React","useState","List","todoList","saveTodo","deleteTodo","isDone","toggleEdit","changeTodo","text","setText","addTodo","console","log","e","target","value","width","map","item","isEdit","task","id","checked"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./List.scss\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\ninterface IProps {\n  todoList: Array<{\n    id: number;\n    task: string;\n    checked: boolean;\n    isEdit: boolean;\n  }>;\n  saveTodo: (task: string) => void;\n  deleteTodo: (id: number) => void;\n  isDone: (id: number, checked: boolean) => void;\n  toggleEdit: (id: number, isEdit: boolean) => void;\n  changeTodo: (id: number, task: string) => void;\n}\n\nconst List = ({\n  todoList,\n  saveTodo,\n  deleteTodo,\n  isDone,\n  toggleEdit,\n  changeTodo,\n}: IProps) => {\n  const [text, setText] = useState(\"\");\n\n  const addTodo = () => {\n    console.log(`adding ${text}`);\n    saveTodo(text);\n    setText(\"\");\n  };\n\n  return (\n    <div className=\"list-wrapper\">\n      <div className=\"tittle-box\">\n        <h1  className=\"rotate\">\n          To do\n        </h1>\n        <h1>List</h1>\n      </div>\n      <div className=\"list-box\">\n        <div className=\"add-section\">\n          <input\n            placeholder=\"ADD YOUR TASK\"\n            className=\"add-input\"\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n          />\n          <div className=\"add-button\" onClick={addTodo}>\n          <i className=\"bi-plus-circle-fill\" style={{width: \"red\"}}></i>\n          </div>\n        </div>\n\n        <div className=\"task-container\">\n          {todoList.map((item) => (\n            <div className=\"task-item\" key={item.id}>\n              <span className=\"task\">\n                {item.isEdit ? (\n                  <input\n                    type=\"text\"\n                    value={item.task}\n                    onChange={(e) => changeTodo(item.id, e.target.value)}\n                  />\n                ) : (\n                  item.task\n                )}\n              </span>\n              <div onClick={() => toggleEdit(item.id, item.isEdit)}><i className={!item.isEdit ? \"bi bi-pen\" : \"bi bi-pen-fill\"}></i></div>\n\n              <div onClick={() => isDone(item.id, !item.checked)}>\n                <i className={item.checked ?  \"bi bi-check-circle-fill\" : \"bi bi-check-circle\"}></i>\n              </div>\n              <div onClick={() => deleteTodo(item.id)}>\n                <i className=\"bi bi-trash2 \"></i>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}