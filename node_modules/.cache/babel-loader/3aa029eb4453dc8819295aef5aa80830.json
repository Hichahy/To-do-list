{"ast":null,"code":"import _defineProperty from\"/Users/stasiu/Programowanie/todo-ts-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/Users/stasiu/Programowanie/todo-ts-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/stasiu/Programowanie/todo-ts-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var _typeToReducer;import typeToReducer from\"type-to-reducer\";import{SAVE_TODO,DELETE_TODO,IS_DONE,TOGGLE_EDIT,CHANGE_TODO}from\"../common/types\";var initialState={todoList:[]};export var user=typeToReducer((_typeToReducer={},_defineProperty(_typeToReducer,SAVE_TODO,function(state,action){return _objectSpread(_objectSpread({},state),{},{todoList:[].concat(_toConsumableArray(state.todoList),[{id:state.todoList.length,task:action.payload.task,checked:false,isEdit:false}])});}),_defineProperty(_typeToReducer,DELETE_TODO,function(state,action){return _objectSpread(_objectSpread({},state),{},{todoList:state.todoList.filter(function(item){return action.payload.id!==item.id;})});}),_defineProperty(_typeToReducer,IS_DONE,function(state,action){return _objectSpread(_objectSpread({},state),{},{todoList:state.todoList.map(function(item){return item.id===action.payload.id?_objectSpread(_objectSpread({},item),{},{checked:action.payload.checked}):item;})});}),_defineProperty(_typeToReducer,TOGGLE_EDIT,function(state,action){return _objectSpread(_objectSpread({},state),{},{todoList:state.todoList.map(function(item){return item.id===action.payload.id?_objectSpread(_objectSpread({},item),{},{isEdit:action.payload.isEdit}):item;})});}),_defineProperty(_typeToReducer,CHANGE_TODO,function(state,action){return _objectSpread(_objectSpread({},state),{},{todoList:state.todoList.map(function(item){return item.id===action.payload.id?_objectSpread(_objectSpread({},item),{},{task:action.payload.task}):item;})});}),_typeToReducer),initialState);export default user;","map":{"version":3,"sources":["/Users/stasiu/Programowanie/todo-ts-redux/src/reducers/todo.ts"],"names":["typeToReducer","SAVE_TODO","DELETE_TODO","IS_DONE","TOGGLE_EDIT","CHANGE_TODO","initialState","todoList","user","state","action","id","length","task","payload","checked","isEdit","filter","item","map"],"mappings":"4fAAA,MAAOA,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OACEC,SADF,CAEEC,WAFF,CAGEC,OAHF,CAIEC,WAJF,CAKEC,WALF,KAMO,iBANP,CAiBA,GAAMC,CAAAA,YAAuB,CAAG,CAC9BC,QAAQ,CAAE,EADoB,CAAhC,CAIA,MAAO,IAAMC,CAAAA,IAAI,CAAGR,aAAa,mDAE5BC,SAF4B,CAEhB,SAACQ,KAAD,CAAmBC,MAAnB,wCACRD,KADQ,MAEXF,QAAQ,8BACHE,KAAK,CAACF,QADH,GAGN,CACEI,EAAE,CAAEF,KAAK,CAACF,QAAN,CAAeK,MADrB,CAEEC,IAAI,CAAEH,MAAM,CAACI,OAAP,CAAeD,IAFvB,CAGEE,OAAO,CAAE,KAHX,CAIEC,MAAM,CAAE,KAJV,CAHM,EAFG,IAFgB,iCAe5Bd,WAf4B,CAed,SAACO,KAAD,CAAmBC,MAAnB,wCACVD,KADU,MAEbF,QAAQ,CAAEE,KAAK,CAACF,QAAN,CAAeU,MAAf,CAAsB,SAACC,IAAD,QAAUR,CAAAA,MAAM,CAACI,OAAP,CAAeH,EAAf,GAAsBO,IAAI,CAACP,EAArC,EAAtB,CAFG,IAfc,iCAmB5BR,OAnB4B,CAmBlB,SAACM,KAAD,CAAmBC,MAAnB,wCACND,KADM,MAETF,QAAQ,CAAEE,KAAK,CAACF,QAAN,CAAeY,GAAf,CAAmB,SAACD,IAAD,QAC3BA,CAAAA,IAAI,CAACP,EAAL,GAAYD,MAAM,CAACI,OAAP,CAAeH,EAA3B,gCAESO,IAFT,MAGMH,OAAO,CAAEL,MAAM,CAACI,OAAP,CAAeC,OAH9B,GAKIG,IANuB,EAAnB,CAFD,IAnBkB,iCA8B5Bd,WA9B4B,CA8Bd,SAACK,KAAD,CAAmBC,MAAnB,wCACVD,KADU,MAEbF,QAAQ,CAAEE,KAAK,CAACF,QAAN,CAAeY,GAAf,CAAmB,SAACD,IAAD,QAC3BA,CAAAA,IAAI,CAACP,EAAL,GAAYD,MAAM,CAACI,OAAP,CAAeH,EAA3B,gCAESO,IAFT,MAGMF,MAAM,CAAEN,MAAM,CAACI,OAAP,CAAeE,MAH7B,GAKIE,IANuB,EAAnB,CAFG,IA9Bc,iCAyC5Bb,WAzC4B,CAyCd,SAACI,KAAD,CAAmBC,MAAnB,wCACVD,KADU,MAEbF,QAAQ,CAAEE,KAAK,CAACF,QAAN,CAAeY,GAAf,CAAmB,SAACD,IAAD,QAC3BA,CAAAA,IAAI,CAACP,EAAL,GAAYD,MAAM,CAACI,OAAP,CAAeH,EAA3B,gCAESO,IAFT,MAGML,IAAI,CAAEH,MAAM,CAACI,OAAP,CAAeD,IAH3B,GAKIK,IANuB,EAAnB,CAFG,IAzCc,kBAsD/BZ,YAtD+B,CAA1B,CAyDP,cAAeE,CAAAA,IAAf","sourcesContent":["import typeToReducer from \"type-to-reducer\";\nimport {\n  SAVE_TODO,\n  DELETE_TODO,\n  IS_DONE,\n  TOGGLE_EDIT,\n  CHANGE_TODO,\n} from \"../common/types\";\n\ninterface stateTodo {\n  todoList: Array<{\n    id: number;\n    task: string;\n    checked: boolean;\n    isEdit: boolean;\n  }>;\n}\n\nconst initialState: stateTodo = {\n  todoList: [],\n};\n\nexport const user = typeToReducer(\n  {\n    [SAVE_TODO]: (state: stateTodo, action: any) => ({\n      ...state,\n      todoList: [\n        ...state.todoList,\n\n        {\n          id: state.todoList.length,\n          task: action.payload.task,\n          checked: false,\n          isEdit: false,\n        },\n      ],\n    }),\n    [DELETE_TODO]: (state: stateTodo, action: any) => ({\n      ...state,\n      todoList: state.todoList.filter((item) => action.payload.id !== item.id),\n    }),\n    [IS_DONE]: (state: stateTodo, action: any) => ({\n      ...state,\n      todoList: state.todoList.map((item) =>\n        item.id === action.payload.id\n          ? {\n              ...item,\n              checked: action.payload.checked,\n            }\n          : item\n      ),\n    }),\n    [TOGGLE_EDIT]: (state: stateTodo, action: any) => ({\n      ...state,\n      todoList: state.todoList.map((item) =>\n        item.id === action.payload.id\n          ? {\n              ...item,\n              isEdit: action.payload.isEdit,\n            }\n          : item\n      ),\n    }),\n    [CHANGE_TODO]: (state: stateTodo, action: any) => ({\n      ...state,\n      todoList: state.todoList.map((item) =>\n        item.id === action.payload.id\n          ? {\n              ...item,\n              task: action.payload.task,\n            }\n          : item\n      ),\n    }),\n  },\n\n  initialState\n);\n\nexport default user;\n"]},"metadata":{},"sourceType":"module"}