{"ast":null,"code":"var _jsxFileName = \"/Users/stasiu/Programowanie/todo-ts-redux/src/components/List.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./List.scss\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = ({\n  todoList,\n  saveTodo,\n  deleteTodo,\n  isDone,\n  toggleEdit,\n  changeTodo\n}) => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n\n  const addTodo = () => {\n    console.log(`adding ${text}`);\n    saveTodo(text);\n    setText(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tittle-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TODO_h1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"rotate\",\n          children: \"To\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"rotate_do\",\n          children: \"Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"ADD YOUR TASK\",\n          className: \"add-input\",\n          type: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-button\",\n          onClick: addTodo,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi-plus-circle-fill\",\n            style: {\n              width: \"40px\",\n              height: \"40px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-box\",\n          children: todoList.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"task\",\n              children: item.isEdit ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: item.task,\n                onChange: e => changeTodo(item.id, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this) : item.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => toggleEdit(item.id, item.isEdit),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: !item.isEdit ? \"bi bi-pen\" : \"bi bi-pen-fill\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => isDone(item.id, !item.checked),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: item.checked ? \"bi bi-check-circle-fill\" : \"bi bi-check-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => deleteTodo(item.id),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-trash2 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/stasiu/Programowanie/todo-ts-redux/src/components/List.tsx"],"names":["React","useState","List","todoList","saveTodo","deleteTodo","isDone","toggleEdit","changeTodo","text","setText","addTodo","console","log","e","target","value","width","height","map","item","isEdit","task","id","checked"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./List.scss\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\ninterface IProps {\n  todoList: Array<{\n    id: number;\n    task: string;\n    checked: boolean;\n    isEdit: boolean;\n  }>;\n  saveTodo: (task: string) => void;\n  deleteTodo: (id: number) => void;\n  isDone: (id: number, checked: boolean) => void;\n  toggleEdit: (id: number, isEdit: boolean) => void;\n  changeTodo: (id: number, task: string) => void;\n}\n\nconst List = ({\n  todoList,\n  saveTodo,\n  deleteTodo,\n  isDone,\n  toggleEdit,\n  changeTodo,\n}: IProps) => {\n  const [text, setText] = useState(\"\");\n\n  const addTodo = () => {\n    console.log(`adding ${text}`);\n    saveTodo(text);\n    setText(\"\");\n  };\n\n  return (\n    <div className=\"list-wrapper\">\n      <div className=\"tittle-box\">\n        <div className=\"TODO_h1\">\n          <h1 className=\"rotate\">To</h1>\n          <h1 className=\"rotate_do\">Do</h1>\n        </div>\n\n        <h1>List</h1>\n      </div>\n      <div className=\"list-box\">\n        <div className=\"add-section\">\n          <input\n            placeholder=\"ADD YOUR TASK\"\n            className=\"add-input\"\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n          />\n          <div className=\"add-button\" onClick={addTodo}>\n            <i\n              className=\"bi-plus-circle-fill\" \n              style={{ width: \"40px\", height: \"40px\" }}\n            ></i>\n          </div>\n        </div>\n        <div className=\"task-container\">\n          <div className=\"task-box\">\n            {todoList.map((item) => (\n              <div className=\"task-item\" key={item.id}>\n                <span className=\"task\">\n                  {item.isEdit ? (\n                    <input\n                      type=\"text\"\n                      value={item.task}\n                      onChange={(e) => changeTodo(item.id, e.target.value)}\n                    />\n                  ) : (\n                    item.task\n                  )}\n                </span>\n                <div onClick={() => toggleEdit(item.id, item.isEdit)}>\n                  <i\n                    className={!item.isEdit ? \"bi bi-pen\" : \"bi bi-pen-fill\"}\n                  ></i>\n                </div>\n\n                <div onClick={() => isDone(item.id, !item.checked)}>\n                  <i\n                    className={\n                      item.checked\n                        ? \"bi bi-check-circle-fill\"\n                        : \"bi bi-check-circle\"\n                    }\n                  ></i>\n                </div>\n                <div onClick={() => deleteTodo(item.id)}>\n                  <i className=\"bi bi-trash2 \"></i>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}