{"ast":null,"code":"import typeToReducer from \"type-to-reducer\";\nimport { SAVE_TODO, DELETE_TODO } from \"../common/types\";\nconst initialState = {\n  todoList: []\n};\nexport const user = typeToReducer({\n  [SAVE_TODO]: (state, action) => ({ ...state,\n    todoList: [...state.todoList, {\n      id: state.todoList.length,\n      task: action.payload.text,\n      checked: false\n    }]\n  }),\n  [DELETE_TODO]: (state, action) => ({ ...state,\n    todoList: state.todoList.filter(item => action.payload !== item.id)\n  })\n}, initialState);\nexport default user;","map":{"version":3,"sources":["/Users/stasiu/Programowanie/todo-ts-redux/src/reducers/todo.ts"],"names":["typeToReducer","SAVE_TODO","DELETE_TODO","initialState","todoList","user","state","action","id","length","task","payload","text","checked","filter","item"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,iBAAvC;AASA,MAAMC,YAAkB,GAAG;AACzBC,EAAAA,QAAQ,EAAE;AADe,CAA3B;AAIA,OAAO,MAAMC,IAAI,GAAGL,aAAa,CAC/B;AACE,GAACC,SAAD,GAAa,CAACK,KAAD,EAAaC,MAAb,MAA8B,EACzC,GAAGD,KADsC;AAEzCF,IAAAA,QAAQ,EAAE,CACR,GAAGE,KAAK,CAACF,QADD,EAER;AACEI,MAAAA,EAAE,EAAEF,KAAK,CAACF,QAAN,CAAeK,MADrB;AAEEC,MAAAA,IAAI,EAAEH,MAAM,CAACI,OAAP,CAAeC,IAFvB;AAGEC,MAAAA,OAAO,EAAE;AAHX,KAFQ;AAF+B,GAA9B,CADf;AAYE,GAACX,WAAD,GAAe,CAACI,KAAD,EAAcC,MAAd,MAA+B,EAC5C,GAAGD,KADyC;AAE5CF,IAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeU,MAAf,CAAsBC,IAAI,IAAIR,MAAM,CAACI,OAAP,KAAmBI,IAAI,CAACP,EAAtD;AAFkC,GAA/B;AAZjB,CAD+B,EAmB/BL,YAnB+B,CAA1B;AAsBP,eAAeE,IAAf","sourcesContent":["import typeToReducer from \"type-to-reducer\";\nimport { SAVE_TODO, DELETE_TODO } from \"../common/types\";\n\ninterface dupa {\n  todoList: Array<{\n    id: number;\n    name: string;\n}>\n}\n\nconst initialState: dupa = {\n  todoList: [],\n};\n\nexport const user = typeToReducer(\n  {\n    [SAVE_TODO]: (state: any, action: any) => ({\n      ...state,\n      todoList: [\n        ...state.todoList,\n        {\n          id: state.todoList.length,\n          task: action.payload.text,\n          checked: false,\n        },\n      ],\n    }),\n    [DELETE_TODO]: (state: dupa, action: any) => ({\n      ...state,\n      todoList: state.todoList.filter(item => action.payload !== item.id)\n    })\n  },\n  \n  initialState\n);\n\nexport default user;\n"]},"metadata":{},"sourceType":"module"}