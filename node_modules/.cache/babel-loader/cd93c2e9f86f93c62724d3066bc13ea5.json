{"ast":null,"code":"var _jsxFileName = \"/Users/stasiu/Programowanie/todo-ts-redux/src/components/List.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = ({\n  todoList,\n  saveTodo,\n  deleteTodo,\n  isDone\n}) => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [edit, setEdit] = useState(false);\n\n  const addTodo = () => {\n    console.log(`adding ${text}`);\n    saveTodo(text);\n    setText(\"\");\n  };\n\n  const isEdit = () => {\n    setEdit(!edit);\n    console.log(`isEdit`, isEdit);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: text.length === 0,\n      onClick: addTodo,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), todoList.map(item => /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setText(e.target.value),\n        value: item.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => deleteTodo(item.id),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: e => isDone(item.id, e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: isEdit,\n        children: \"EDIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"jgqB+RiJ9VrlU1OVQRpbQkbaxMk=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/stasiu/Programowanie/todo-ts-redux/src/components/List.tsx"],"names":["React","useState","List","todoList","saveTodo","deleteTodo","isDone","text","setText","edit","setEdit","addTodo","console","log","isEdit","e","target","value","length","map","item","task","id","checked"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAeA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,UAAtB;AAAkCC,EAAAA;AAAlC,CAAD,KAAwD;AAAA;;AACnE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;;AAGA,QAAMU,OAAO,GAAG,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAa,UAASN,IAAK,EAA3B;AACAH,IAAAA,QAAQ,CAACG,IAAD,CAAR;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAJD;;AAMF,QAAMM,MAAM,GAAG,MAAM;AACnBJ,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAa,QAAb,EAAsBC,MAAtB;AACD,GAHD;;AAKE,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEP,IAFT;AAGE,MAAA,QAAQ,EAAGQ,CAAD,IAAOP,OAAO,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAQ,MAAA,QAAQ,EAAEV,IAAI,CAACW,MAAL,KAAgB,CAAlC;AAAqC,MAAA,OAAO,EAAEP,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EASGR,QAAQ,CAACgB,GAAT,CAAcC,IAAD,iBACZ;AAAA,8BACE;AAAQ,QAAA,QAAQ,EAAGL,CAAD,IAAOP,OAAO,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhC;AAAkD,QAAA,KAAK,EAAEG,IAAI,CAACC;AAA9D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,OAAO,EAAE,MAAMhB,UAAU,CAACe,IAAI,CAACE,EAAN,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAGP,CAAD,IAAOT,MAAM,CAACc,IAAI,CAACE,EAAN,EAAUP,CAAC,CAACC,MAAF,CAASO,OAAnB;AAA9C;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,OAAO,EAAET,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CATH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CApCD;;GAAMZ,I;;KAAAA,I;AAsCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\n\ninterface IProps {\n  todoList: Array<{\n    id: number;\n    task: string;\n    checked: boolean;\n    \n\n  }>;\n  saveTodo: (text: string) => void;\n  deleteTodo: (id: number) => void;\n  isDone: (id: number, checked:boolean) => void;\n}\n\nconst List = ({ todoList, saveTodo, deleteTodo, isDone }: IProps) => {\n  const [text, setText] = useState(\"\");\n  const [edit, setEdit] = useState(false)\n  \n\n  const addTodo = () => {\n    console.log(`adding ${text}`);\n    saveTodo(text);\n    setText(\"\");\n  };\n\nconst isEdit = () => {\n  setEdit(!edit)\n  console.log(`isEdit`, isEdit)\n}\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      />\n      <button disabled={text.length === 0} onClick={addTodo}>\n        Add\n      </button>\n      {todoList.map((item) => (\n        <form>\n          <input  onChange={(e) => setText(e.target.value)} value={item.task}></input>\n          <div onClick={() => deleteTodo(item.id)}>X</div>\n          <input type=\"checkbox\" onChange={(e) => isDone(item.id, e.target.checked)}/>\n          <button onClick={isEdit}>EDIT</button>\n        </form>\n      ))}\n    </div>\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}