{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.default = typeToReducer;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // internal state\n\n\nvar typeDelimiter = '_'; // change the string separating action types when reducerMap is nested\n\nvar setTypeDelimiter = exports.setTypeDelimiter = function setTypeDelimiter(customTypeDelimiter) {\n  return typeDelimiter = customTypeDelimiter;\n}; // function to concatenate any nested types\n\n\nvar _makeType = function _makeType(prefix, type) {\n  return prefix.concat(type).join(typeDelimiter);\n}; // iterator function that will read the reducerMap and return a flattened object\n\n\nvar _flattenReducerMap = function _flattenReducerMap(reducers) {\n  var initial = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var reducerTypes = Object.keys(reducers || {});\n  return reducerTypes.reduce(function (acc, type) {\n    var reducer = reducers[type];\n    return typeof reducer === 'function' ? _extends({}, acc, _defineProperty({}, _makeType(prefix, type), reducer)) : _flattenReducerMap(reducer, acc, [_makeType(prefix, type)]);\n  }, initial);\n};\n\nfunction typeToReducer(reducerMap, initialState) {\n  var flattened = _flattenReducerMap(reducerMap);\n\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments[1];\n    var reducer = flattened[action.type];\n    return reducer ? reducer(state, action) : state;\n  };\n}","map":{"version":3,"sources":["/Users/stasiu/Programowanie/todo-ts-redux/node_modules/type-to-reducer/lib/index.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","default","typeToReducer","_defineProperty","obj","enumerable","configurable","writable","typeDelimiter","setTypeDelimiter","customTypeDelimiter","_makeType","prefix","type","concat","join","_flattenReducerMap","reducers","initial","undefined","reducerTypes","keys","reduce","acc","reducer","reducerMap","initialState","flattened","state","action"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = typeToReducer;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// internal state\nvar typeDelimiter = '_';\n\n// change the string separating action types when reducerMap is nested\nvar setTypeDelimiter = exports.setTypeDelimiter = function setTypeDelimiter(customTypeDelimiter) {\n  return typeDelimiter = customTypeDelimiter;\n};\n\n// function to concatenate any nested types\nvar _makeType = function _makeType(prefix, type) {\n  return prefix.concat(type).join(typeDelimiter);\n};\n\n// iterator function that will read the reducerMap and return a flattened object\nvar _flattenReducerMap = function _flattenReducerMap(reducers) {\n  var initial = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  var reducerTypes = Object.keys(reducers || {});\n  return reducerTypes.reduce(function (acc, type) {\n    var reducer = reducers[type];\n    return typeof reducer === 'function' ? _extends({}, acc, _defineProperty({}, _makeType(prefix, type), reducer)) : _flattenReducerMap(reducer, acc, [_makeType(prefix, type)]);\n  }, initial);\n};\n\nfunction typeToReducer(reducerMap, initialState) {\n  var flattened = _flattenReducerMap(reducerMap);\n\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments[1];\n\n    var reducer = flattened[action.type];\n    return reducer ? reducer(state, action) : state;\n  };\n}"]},"metadata":{},"sourceType":"script"}