{"ast":null,"code":"var _jsxFileName = \"/Users/stasiu/Programowanie/todo-ts-redux/src/components/List.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./List.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = ({\n  todoList,\n  saveTodo,\n  deleteTodo,\n  isDone,\n  toggleEdit,\n  changeTodo\n}) => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n\n  const addTodo = () => {\n    console.log(`adding ${text}`);\n    saveTodo(text);\n    setText(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/stasiu/Programowanie/todo-ts-redux/src/components/List.tsx"],"names":["React","useState","List","todoList","saveTodo","deleteTodo","isDone","toggleEdit","changeTodo","text","setText","addTodo","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;;;AAgBA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA,QADY;AAEZC,EAAAA,QAFY;AAGZC,EAAAA,UAHY;AAIZC,EAAAA,MAJY;AAKZC,EAAAA,UALY;AAMZC,EAAAA;AANY,CAAD,KAOC;AAAA;;AACZ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMU,OAAO,GAAG,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAa,UAASJ,IAAK,EAA3B;AACAL,IAAAA,QAAQ,CAACK,IAAD,CAAR;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAxBD;;GAAMR,I;;KAAAA,I;AA0BN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./List.scss\";\n\ninterface IProps {\n  todoList: Array<{\n    id: number;\n    task: string;\n    checked: boolean;\n    isEdit: boolean;\n  }>;\n  saveTodo: (task: string) => void;\n  deleteTodo: (id: number) => void;\n  isDone: (id: number, checked: boolean) => void;\n  toggleEdit: (id: number, isEdit: boolean) => void;\n  changeTodo: (id: number, task: string) => void;\n}\n\nconst List = ({\n  todoList,\n  saveTodo,\n  deleteTodo,\n  isDone,\n  toggleEdit,\n  changeTodo,\n}: IProps) => {\n  const [text, setText] = useState(\"\");\n\n  const addTodo = () => {\n    console.log(`adding ${text}`);\n    saveTodo(text);\n    setText(\"\");\n  };\n\n  return (\n    <div className=\"list-wrapper\">\n      <div>\n\n      </div>\n      \n    </div>\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}